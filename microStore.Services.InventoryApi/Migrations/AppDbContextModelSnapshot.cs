// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using microStore.Services.InventoryApi.Data;

#nullable disable

namespace microStore.Services.InventoryApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("microStore.Services.InventoryApi.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("RetailPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("InventoryId");

                    b.ToTable("Inventories");

                    b.HasData(
                        new
                        {
                            InventoryId = 1,
                            ProductId = 1,
                            Quantity = 20,
                            RetailPrice = 100000m,
                            VendorId = 1
                        },
                        new
                        {
                            InventoryId = 2,
                            ProductId = 2,
                            Quantity = 453,
                            RetailPrice = 100000m,
                            VendorId = 2
                        },
                        new
                        {
                            InventoryId = 3,
                            ProductId = 3,
                            Quantity = 20,
                            RetailPrice = 100000m,
                            VendorId = 3
                        },
                        new
                        {
                            InventoryId = 4,
                            ProductId = 4,
                            Quantity = 45,
                            RetailPrice = 100000m,
                            VendorId = 4
                        });
                });

            modelBuilder.Entity("microStore.Services.InventoryApi.Models.Vendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorId"));

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VendorId");

                    b.ToTable("Vendors");

                    b.HasData(
                        new
                        {
                            VendorId = 1,
                            VendorName = "Vendor1"
                        },
                        new
                        {
                            VendorId = 2,
                            VendorName = "Vendor1"
                        },
                        new
                        {
                            VendorId = 3,
                            VendorName = "Vendor2"
                        },
                        new
                        {
                            VendorId = 4,
                            VendorName = "Vendor1"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
