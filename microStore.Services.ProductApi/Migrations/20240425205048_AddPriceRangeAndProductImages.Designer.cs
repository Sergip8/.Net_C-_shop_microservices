// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using microStore.Services.ProductApi.Data;

#nullable disable

namespace microStore.Services.ProductApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240425205048_AddPriceRangeAndProductImages")]
    partial class AddPriceRangeAndProductImages
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("microStore.Services.ProductApi.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            BrandId = 1,
                            BrandName = "Brand 1"
                        },
                        new
                        {
                            BrandId = 2,
                            BrandName = "Brand 2"
                        },
                        new
                        {
                            BrandId = 3,
                            BrandName = "Brand 3"
                        },
                        new
                        {
                            BrandId = 4,
                            BrandName = "Brand 4"
                        },
                        new
                        {
                            BrandId = 5,
                            BrandName = "Brand 5"
                        });
                });

            modelBuilder.Entity("microStore.Services.ProductApi.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<int>("CategoryLevel")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryParentId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryLevel = 0,
                            CategoryName = "Cat 1",
                            CategoryParentId = 0
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryLevel = 1,
                            CategoryName = "Cat 2",
                            CategoryParentId = 1
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryLevel = 2,
                            CategoryName = "Cat 3",
                            CategoryParentId = 2
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryLevel = 1,
                            CategoryName = "Cat 4",
                            CategoryParentId = 1
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryLevel = 2,
                            CategoryName = "Cat 5",
                            CategoryParentId = 4
                        });
                });

            modelBuilder.Entity("microStore.Services.ProductApi.Models.PriceRange", b =>
                {
                    b.Property<int>("PriceRangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PriceRangeId"));

                    b.Property<double>("HighPrice")
                        .HasColumnType("float");

                    b.Property<double>("LowPrice")
                        .HasColumnType("float");

                    b.HasKey("PriceRangeId");

                    b.ToTable("PriceRanges");
                });

            modelBuilder.Entity("microStore.Services.ProductApi.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriceRangeId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            BrandId = 1,
                            Description = " Quisque vel lacus ac magna, vehicula sagittis ut non lacus.<br/> Vestibulum arcu turpis, maximus malesuada neque. Phasellus commodo cursus pretium.",
                            Link = "",
                            Name = "Samosa",
                            PriceRangeId = 0
                        },
                        new
                        {
                            ProductId = 2,
                            BrandId = 2,
                            Description = " Quisque vel lacus ac magna, vehicula sagittis ut non lacus.<br/> Vestibulum arcu turpis, maximus malesuada neque. Phasellus commodo cursus pretium.",
                            Link = "",
                            Name = "Paneer Tikka",
                            PriceRangeId = 0
                        },
                        new
                        {
                            ProductId = 3,
                            BrandId = 3,
                            Description = " Quisque vel lacus ac magna, vehicula sagittis ut non lacus.<br/> Vestibulum arcu turpis, maximus malesuada neque. Phasellus commodo cursus pretium.",
                            Link = "",
                            Name = "Sweet Pie",
                            PriceRangeId = 0
                        },
                        new
                        {
                            ProductId = 4,
                            BrandId = 4,
                            Description = " Quisque vel lacus ac magna, vehicula sagittis ut non lacus.<br/> Vestibulum arcu turpis, maximus malesuada neque. Phasellus commodo cursus pretium.",
                            Link = "",
                            Name = "Pav Bhaji",
                            PriceRangeId = 0
                        });
                });

            modelBuilder.Entity("microStore.Services.ProductApi.Models.ProductImages", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<string>("ImageLabel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("microStore.Services.ProductApi.Models.ProductsCategories", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsCategories");
                });

            modelBuilder.Entity("microStore.Services.ProductApi.Models.ProductImages", b =>
                {
                    b.HasOne("microStore.Services.ProductApi.Models.Product", null)
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("microStore.Services.ProductApi.Models.ProductsCategories", b =>
                {
                    b.HasOne("microStore.Services.ProductApi.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("microStore.Services.ProductApi.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("microStore.Services.ProductApi.Models.Product", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
